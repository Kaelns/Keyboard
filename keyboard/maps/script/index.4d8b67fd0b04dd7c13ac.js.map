{"version":3,"file":"script/index.4d8b67fd0b04dd7c13ac.js","mappings":"iwIAAe,MAAMA,EACnBC,YAAYC,GACVC,KAAKD,KAAOA,EAGdE,mBACE,IAAIC,EAAW,GACf,MAAMC,EAAWC,SAASC,cAAc,OA+BxC,OA9BAF,EAASG,GAAK,QAEdC,OAAOC,KAAKR,KAAKD,MAAMU,SAASC,IAC9BR,GAAY,oBAEZF,KAAKD,KAAKW,GAAKD,SAAQ,EACrBE,MAAAA,EAAOC,QAAAA,EAASC,SAAAA,EAAUC,MAAAA,MAGxBZ,GADY,WAAVS,EACU,gCAAgCC,EAAQG,KAClD,oBACeF,MAAaC,EAAQ,eAAeA,KAAW,MAAMH,cAE1D,kfAahBT,GAAY,YAGdC,EAASa,UAAYd,EACdC,GCtCI,MAAMc,EACnBnB,YAAYoB,GACVlB,KAAKkB,cAAgBA,EAGvBC,kBACE,MAAMC,EAAmBhB,SAASiB,yBAUlC,OARArB,KAAKkB,cAAcT,SAASa,IAC1B,MAAMC,EAAUnB,SAASC,cAAc,KACvCkB,EAAQC,UAAY,UAEpBD,EAAQP,UAAYM,EACpBF,EAAiBK,OAAOF,MAGnBH,GCfX,MAoBA,EApBwB,WAEtB,MAAME,EAAUlB,SAASC,cAAc,OAevC,OAbA,SAA4BqB,GAU1B,OATIA,GAAsB,iBAARA,IAGhBA,GADAA,EAAMA,EAAIC,QAAQ,uCAAwC,KAChDA,QAAQ,wCAAyC,IAC3DL,EAAQN,UAAYU,EACpBA,EAAMJ,EAAQM,YACdN,EAAQM,YAAc,IAGjBF,GAdY,GCKvB,IAAIG,EACAC,EAGAC,EAFAC,GAAS,EACTC,GAAU,EAGd,MAAMf,EAAgB,CAAC,sEAAuE,2DAA4D,uDAEpJgB,EAAkB,KACtB,IAAIC,EACJ,MAAMC,EAAWhC,SAASiC,iBAAiB,SAE3C,GAAa,OAATR,EACFM,EAAQC,MACH,CACL,MAAME,EAAWlC,SAASiC,iBAAiB,YAC3CF,EAAQ,IAAIC,KAAaE,GAGtBN,GAMHG,EAAM1B,SAAS8B,IACbA,EAAGvB,UAAYuB,EAAGvB,UAAUwB,iBAE9BR,GAAS,IARTG,EAAM1B,SAAS8B,IACbA,EAAGvB,UAAYuB,EAAGvB,UAAUyB,iBAE9BT,GAAS,IASPU,EAAkB,CAACC,EAAOC,KAC9B,IAAIC,EACAC,EAaJ,GAXIF,IACFE,EAA+B,OAATjB,GAGpBc,GAASA,EAAMI,QAAUJ,EAAMK,UACjCnB,EAAgB,OAATA,EAAgB,KAAO,KAC9BC,EAAiB,OAATD,EAERgB,GAAU,GAGRC,GAAuBD,EAAS,CAClC,MAAMI,EAAa7C,SAAS8C,cAAc,SAASlC,UAC7CmC,IAAmBF,GAAaA,IAAeA,EAAWR,cAEpCrC,SAASiC,iBAAiB,gBAElC5B,SAAS8B,IAC3B,MAAMa,EAAQb,EAAGc,QAAQD,MACzBb,EAAGc,QAAQD,MAAQb,EAAGvB,UACtBuB,EAAGvB,UAAYoC,KAGbD,GACFnB,GAAS,EACTE,MAEAF,GAAS,EACTE,KAGFW,GAAU,IAkBRS,EAAgB,CAACC,EAAGC,KACxB,MAAMC,EAAW,eAAeD,MAIhC,OAFmBpD,SAAS8C,cAAcO,IAKtCC,EAA8B,CAAChC,EAAKiC,EAAOC,EAAOC,KACtD,IAAIC,EAAa,EACbC,EAAIJ,EACR,MAAMK,EAAY,EAAetC,GAC3BuC,EAASD,EAAUC,OACzB,IAAKJ,EAAa,CAGhB,GAFAC,EAAa,EACbC,GAAK,EACAA,EAAI,IAAMH,GAAWG,EAAI,IAAME,GAAUL,EAC5C,OAAO,KAGLA,GACFG,IAIJ,OAAOC,EAAUE,MAAM,EAAGH,IAAMF,GAAe,IAAMG,EAAUE,MAAMH,EAAID,IAoBrEK,EAAmB,CAACX,EAASY,EAAYb,KAC7C,IAAIM,EACJ,MAAMQ,EAAWjE,SAAS8C,cAAc,YAClCoB,EAAWD,EAASE,eACpBC,EAAiBH,EAASrD,UAAUiD,OAM1C,OAJAvB,EAAgBa,GAAG,GAEnBc,EAASI,QAEDjB,GACN,IAAK,WACH,GAAID,EAAEmB,OAAQ,OACdN,EAAWO,UAAUC,OAAO,eAC5B1C,IACA,MACF,IAAK,QACH2B,EAAc,KACdQ,EAASrD,UAAY0C,EAA4BW,EAASrD,UAAWqD,EAASE,gBAAgB,EAAOV,GACrGQ,EAASE,eAAiBD,EAAW,EACrC,MACF,IAAK,QACHT,EAAc,IACdQ,EAASrD,UAAY0C,EAA4BW,EAASrD,UAAWqD,EAASE,gBAAgB,EAAOV,GACrGQ,EAASE,eAAiBD,EAAW,EACrC,MACF,IAAK,MACHT,EAAc,OACdQ,EAASrD,UAAY0C,EAA4BW,EAASrD,UAAWqD,EAASE,gBAAgB,EAAOV,GACrGQ,EAASE,eAAiBD,EAAW,EACrC,MACF,IAAK,YACHD,EAASE,eAAiBF,EAASQ,aAAeP,EAAW,EAAI,EAAI,EAAIA,EAAW,EACpF,MACF,IAAK,aACHD,EAASE,eAAiBF,EAASQ,aAAeP,EAAW,EAAIE,EAAiBA,EAAiBF,EAAW,EAC9G,MACF,IAAK,SACH,MAAMQ,EAAiBpB,EAA4BW,EAASrD,UAAWqD,EAASE,gBAAgB,GACzE,OAAnBO,IACFT,EAASrD,UAAY8D,EACrBT,EAASE,eAAiBD,GAE5B,MACF,IAAK,YACH,MAAMS,EAAoBrB,EAA4BW,EAASrD,UAAWqD,EAASE,gBAAgB,GACzE,OAAtBQ,IACFV,EAASrD,UAAY+D,EACrBV,EAASE,eAAiBD,EAAW,GAEvC,MACF,IAAK,YACL,IAAK,aACH,GAAIf,EAAEmB,OAAQ,OACdzC,GAAU,EACVC,IACA,MACF,IAAK,cACL,IAAK,WACL,IAAK,UACL,IAAK,WACL,IAAK,eACH,MACF,IAAK,UACHmC,EAASE,eAAiBF,EAASQ,aAAe,EAClD,MACF,IAAK,YACHR,EAASE,eAAiBF,EAASQ,aAAeL,EAClD,MACF,QAtFwB,EAACJ,EAAYC,EAAUC,KACjD,IAAIT,EACJ,MAAMmB,GAAclD,GAAQsC,EAAWO,UAAUM,SAAS,WACpDC,IAAapD,GAAQsC,EAAWO,UAAUM,SAAS,WAEzD,GAAIb,EAAWO,UAAUM,SAAS,SAAWD,EAC3CnB,EAAcO,EAAWpD,UAAUmE,OACnCd,EAASrD,UAAY0C,EAA4BW,EAASrD,UAAWqD,EAASE,gBAAgB,EAAOV,QAChG,GAAIO,EAAWO,UAAUM,SAAS,WAAaC,EAAY,CAChE,MAAOE,EAAaC,GAAUjB,EAAWpD,UAAUsE,MAAM,QAAQC,KAAKhD,GAAOA,EAAG4C,SAChFtB,EAAc5B,EAAUmD,EAAcC,EACtChB,EAASrD,UAAY0C,EAA4BW,EAASrD,UAAWqD,EAASE,gBAAgB,EAAOV,GAGvGQ,EAASE,eAAiBD,EAAW,GAyEjCkB,CAAoBpB,EAAYC,EAAUC,KAI1CmB,EAAcC,IAClB7D,EAAO6D,EACP5D,EAAiB,OAATD,EAER,MAAM8D,EAAOvF,SAAS8C,cAAc,QAE9B0C,EAAYxF,SAASC,cAAc,OACzCuF,EAAUpE,UAAY,YAEtB,MAAM6C,EA9Ie,MACrB,MAAMA,EAAWjE,SAASC,cAAc,YAUxC,OATAgE,EAAS/D,GAAK,WACd+D,EAAS7C,UAAY,WACrB6C,EAASwB,aACP,cACA,WAEFxB,EAASwB,aAAa,YAAa,aACnCxB,EAASwB,aAAa,aAAc,SAE7BxB,GAmIUyB,GACX3F,EAAW,IAAIN,EAAe,GAAMI,mBACpCsB,EAAU,IAAIN,EAAcC,GAAeC,kBAEjDyE,EAAUnE,OAAO4C,EAAUlE,EAAUoB,GACrCoE,EAAKlE,OAAOmE,GAEZlD,EAAgB,MAAM,GAEtBvC,EAAS4F,iBAAiB,eAAgBxC,IACxC,MAAMa,EAAab,EAAEyC,OACrB,GAAyC,WAArC5B,EAAW6B,QAAQzD,cAA4B,CACjDT,EAA0BqC,EAC1B,MAAMZ,EAAUY,EAAWf,QAAQ6C,KACnC/B,EAAiBX,EAASY,EAAYb,OAI1CpD,EAAS4F,iBAAiB,aAAa,KACrC,GAAIhE,EAAyB,CAC3B,MAAMyB,EAAUzB,EAAwBsB,QAAQ6C,KAChD7B,EAASI,QAEO,cAAZjB,GAAuC,eAAZA,IAC7BvB,GAAU,EACVC,KAEFH,EAA0B,UCnPhC,IAAI2D,EDyPJtF,SAAS2F,iBAAiB,WAAYxC,IACpC,MAAMC,EAAUD,EAAE2C,KACZ9B,EAAad,EAAcC,EAAGC,GAEpC,IAAIY,EAQF,OAAO+B,QAAQC,IAAI,gDAPa,YAA5BhC,EAAWf,QAAQ6C,MAAkD,cAA5B9B,EAAWf,QAAQ6C,OAC9D3C,EAAE8C,iBACFlC,EAAiBX,EAASY,EAAYb,IAExCa,EAAWO,UAAU2B,IAAI,oBAO7BlG,SAAS2F,iBAAiB,SAAUxC,IAClC,MAAMC,EAAUD,EAAE2C,KACZ9B,EAAad,EAAcC,EAAGC,GAEhCY,GACFA,EAAWO,UAAU4B,OAAO,iBAGd,cAAZ/C,GAAuC,eAAZA,IAC7BvB,GAAU,EACVC,QAQJsE,OAAOT,iBAAiB,gBAJxB,WACEU,aAAaC,QAAQ,WAAY7E,MCpR/B6D,EADEe,aAAaE,QAAQ,aAAoD,cAArCF,aAAaE,QAAQ,YAChDF,aAAaE,QAAQ,YAErB,KAMfH,OAAOI,OAAS,WAEdnB,EAAWC,M","sources":["webpack:///./script/components/CreateKeyboard.js","webpack:///./script/components/CreateMessage.js","webpack:///./script/functions/DecodeHTMLEntities.js","webpack:///./script/components/Keyboard.js","webpack:///./index.js"],"sourcesContent":["export default class CreateKeyboard {\n  constructor(rows) {\n    this.rows = rows;\n  }\n\n  generateKeyboard() {\n    let template = '';\n    const keyboard = document.createElement('div');\n    keyboard.id = 'board';\n\n    Object.keys(this.rows).forEach((row) => {\n      template += '<div class=\"row\">';\n\n      this.rows[row].forEach(({\n        elEng, classes, dataCode, elRus,\n      }) => {\n        if (elEng !== 'arrows') {\n          template += `<button type=\"button\" class=\"${classes.join(\n            ' ',\n          )}\" data-code=\"${dataCode}\" ${elRus ? `data-cache=\"${elRus}\"` : ''}>${elEng} </button>`;\n        } else {\n          template += `<div class=\"arrows\">\n          <div class=\"row\">\n            <button type=\"button\" class=\"arrow arrow_up\" data-code=\"ArrowUp\"></button>\n          </div>\n          <div class=\"row\">\n          <button type=\"button\" class=\"arrow arrow_left\" data-code=\"ArrowLeft\"></button>\n          <button type=\"button\" class=\"arrow arrow_down\" data-code=\"ArrowDown\"></button>\n            <button type=\"button\" class=\"arrow arrow_right\" data-code=\"ArrowRight\"></button>\n          </div>\n        </div>`;\n        }\n      });\n\n      template += '</div>';\n    });\n\n    keyboard.innerHTML = template;\n    return keyboard;\n  }\n}\n","export default class CreateMessage {\n  constructor(arrOfMessages) {\n    this.arrOfMessages = arrOfMessages;\n  }\n\n  generateMessage() {\n    const messageContainer = document.createDocumentFragment();\n\n    this.arrOfMessages.forEach((element) => {\n      const message = document.createElement('p');\n      message.className = 'message';\n\n      message.innerHTML = element;\n      messageContainer.append(message);\n    });\n\n    return messageContainer;\n  }\n}\n","// eslint-disable-next-line func-names\nconst decodeEntities = (function () {\n  // this prevents any overhead from creating the object each time\n  const element = document.createElement('div');\n\n  function decodeHTMLEntities(str) {\n    if (str && typeof str === 'string') {\n      // strip script/html tags\n      str = str.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\n      str = str.replace(/<\\/?\\w(?:[^\"'>]|\"[^\"]*\"|'[^']*')*>/gmi, '');\n      element.innerHTML = str;\n      str = element.textContent;\n      element.textContent = '';\n    }\n\n    return str;\n  }\n\n  return decodeHTMLEntities;\n}());\n\nexport default decodeEntities;\n","/* eslint-disable no-multi-assign */\nimport JSON from '../../assets/keyboard.json';\nimport CreateKeyboard from './CreateKeyboard';\nimport CreateMessage from './CreateMessage';\nimport decodeEntities from '../functions/DecodeHTMLEntities';\n\nlet lang;\nlet isEng;\nlet isCaps = false;\nlet isShift = false;\nlet pressedKeyForMouseEvent;\n// eslint-disable-next-line max-len\nconst arrOfMessages = ['All keys that are not present on the virtual keyboard work as usual', 'The keyboard was created in the Windows operating system', 'To switch the language combination: left ctrl + alt'];\n\nconst capsLockHandler = () => {\n  let chars;\n  const charsEng = document.querySelectorAll('.char');\n\n  if (lang === 'en') {\n    chars = charsEng;\n  } else {\n    const charsRus = document.querySelectorAll('.char-ru');\n    chars = [...charsEng, ...charsRus];\n  }\n\n  if (!isCaps) {\n    chars.forEach((el) => {\n      el.innerHTML = el.innerHTML.toUpperCase();\n    });\n    isCaps = true;\n  } else {\n    chars.forEach((el) => {\n      el.innerHTML = el.innerHTML.toLowerCase();\n    });\n    isCaps = false;\n  }\n};\n\nconst languageHandler = (event, isFirstTime) => {\n  let further;\n  let isRusInLocalStorage;\n\n  if (isFirstTime) {\n    isRusInLocalStorage = lang === 'ru';\n  }\n\n  if (event && event.altKey && event.ctrlKey) {\n    lang = lang === 'en' ? 'ru' : 'en';\n    isEng = lang === 'en';\n\n    further = true;\n  }\n\n  if (isRusInLocalStorage || further) {\n    const randomChar = document.querySelector('.char').innerHTML;\n    const isRandomCharCaps = randomChar ? randomChar === randomChar.toUpperCase() : false;\n\n    const elementsToTranslate = document.querySelectorAll('[data-cache]');\n\n    elementsToTranslate.forEach((el) => {\n      const cache = el.dataset.cache;\n      el.dataset.cache = el.innerHTML;\n      el.innerHTML = cache;\n    });\n\n    if (isRandomCharCaps) {\n      isCaps = false;\n      capsLockHandler();\n    } else {\n      isCaps = true;\n      capsLockHandler();\n    }\n\n    further = false;\n  }\n};\n\nconst createTextArea = () => {\n  const textarea = document.createElement('textarea');\n  textarea.id = 'editable';\n  textarea.className = 'textarea';\n  textarea.setAttribute(\n    'placeholder',\n    'Lets go',\n  );\n  textarea.setAttribute('autofocus', 'autofocus');\n  textarea.setAttribute('spellcheck', 'false');\n\n  return textarea;\n};\n\nconst getPressedKey = (e, keyCode) => {\n  const selector = `[data-code=\"${keyCode}\"]`;\n\n  const pressedKey = document.querySelector(selector);\n\n  return pressedKey;\n};\n\nconst sliceOrAddTextAreaInnerHTML = (str, index, isDel, symbolToAdd) => {\n  let isDeletion = 0;\n  let i = index;\n  const decodeStr = decodeEntities(str);\n  const length = decodeStr.length;\n  if (!symbolToAdd) {\n    isDeletion = 1;\n    i -= 1;\n    if ((i < 0 && !isDel) || (i + 1 === length && isDel)) {\n      return null;\n    }\n\n    if (isDel) {\n      i++;\n    }\n  }\n\n  return decodeStr.slice(0, i) + (symbolToAdd || '') + decodeStr.slice(i + isDeletion);\n};\n\nconst insertKeyToTextArea = (pressedKey, textarea, position) => {\n  let symbolToAdd;\n  const includeRus = !isEng ? pressedKey.classList.contains('char-ru') : false;\n  const includeEng = isEng ? pressedKey.classList.contains('char-ru') : false;\n\n  if (pressedKey.classList.contains('char') || includeRus) {\n    symbolToAdd = pressedKey.innerHTML.trim();\n    textarea.innerHTML = sliceOrAddTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, false, symbolToAdd);\n  } else if (pressedKey.classList.contains('double') || includeEng) {\n    const [shiftSymbol, symbol] = pressedKey.innerHTML.split('<br>').map((el) => el.trim());\n    symbolToAdd = isShift ? shiftSymbol : symbol;\n    textarea.innerHTML = sliceOrAddTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, false, symbolToAdd);\n  }\n\n  textarea.selectionStart = position + 1;\n};\n\nconst allClicksHandler = (keyCode, pressedKey, e) => {\n  let symbolToAdd;\n  const textarea = document.querySelector('textarea');\n  const position = textarea.selectionStart;\n  const textareaLength = textarea.innerHTML.length;\n\n  languageHandler(e, false);\n\n  textarea.focus();\n\n  switch (keyCode) {\n    case 'CapsLock':\n      if (e.repeat) return;\n      pressedKey.classList.toggle('caps_active');\n      capsLockHandler();\n      break;\n    case 'Enter':\n      symbolToAdd = '\\n';\n      textarea.innerHTML = sliceOrAddTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, false, symbolToAdd);\n      textarea.selectionStart = position + 1;\n      break;\n    case 'Space':\n      symbolToAdd = ' ';\n      textarea.innerHTML = sliceOrAddTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, false, symbolToAdd);\n      textarea.selectionStart = position + 1;\n      break;\n    case 'Tab':\n      symbolToAdd = '    ';\n      textarea.innerHTML = sliceOrAddTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, false, symbolToAdd);\n      textarea.selectionStart = position + 4;\n      break;\n    case 'ArrowLeft':\n      textarea.selectionStart = textarea.selectionEnd = position - 1 < 0 ? 0 : position - 1;\n      break;\n    case 'ArrowRight':\n      textarea.selectionStart = textarea.selectionEnd = position + 1 > textareaLength ? textareaLength : position + 1;\n      break;\n    case 'Delete':\n      const sliceForDelete = sliceOrAddTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, true);\n      if (sliceForDelete !== null) {\n        textarea.innerHTML = sliceForDelete;\n        textarea.selectionStart = position;\n      }\n      break;\n    case 'Backspace':\n      const sliceForBackspace = sliceOrAddTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, false);\n      if (sliceForBackspace !== null) {\n        textarea.innerHTML = sliceForBackspace;\n        textarea.selectionStart = position - 1;\n      }\n      break;\n    case 'ShiftLeft':\n    case 'ShiftRight':\n      if (e.repeat) return;\n      isShift = true;\n      capsLockHandler();\n      break;\n    case 'ControlLeft':\n    case 'MetaLeft':\n    case 'AltLeft':\n    case 'AltRight':\n    case 'ControlRight':\n      break;\n    case 'ArrowUp':\n      textarea.selectionStart = textarea.selectionEnd = 0;\n      break;\n    case 'ArrowDown':\n      textarea.selectionStart = textarea.selectionEnd = textareaLength;\n      break;\n    default:\n      insertKeyToTextArea(pressedKey, textarea, position);\n  }\n};\n\nconst createPage = (language) => {\n  lang = language;\n  isEng = lang === 'en';\n\n  const body = document.querySelector('body');\n\n  const container = document.createElement('div');\n  container.className = 'container';\n\n  const textarea = createTextArea();\n  const keyboard = new CreateKeyboard(JSON).generateKeyboard();\n  const message = new CreateMessage(arrOfMessages).generateMessage();\n\n  container.append(textarea, keyboard, message);\n  body.append(container);\n\n  languageHandler(null, true);\n\n  keyboard.addEventListener('pointerdown', (e) => {\n    const pressedKey = e.target;\n    if (pressedKey.tagName.toLowerCase() === 'button') {\n      pressedKeyForMouseEvent = pressedKey;\n      const keyCode = pressedKey.dataset.code;\n      allClicksHandler(keyCode, pressedKey, e);\n    }\n  });\n\n  keyboard.addEventListener('pointerup', () => {\n    if (pressedKeyForMouseEvent) {\n      const keyCode = pressedKeyForMouseEvent.dataset.code;\n      textarea.focus();\n\n      if (keyCode === 'ShiftLeft' || keyCode === 'ShiftRight') {\n        isShift = false;\n        capsLockHandler();\n      }\n      pressedKeyForMouseEvent = null;\n    }\n  });\n};\n\n// eslint-disable-next-line consistent-return\ndocument.addEventListener('keydown', (e) => {\n  const keyCode = e.code;\n  const pressedKey = getPressedKey(e, keyCode);\n\n  if (pressedKey) {\n    if (pressedKey.dataset.code !== 'ArrowUp' && pressedKey.dataset.code !== 'ArrowDown') {\n      e.preventDefault();\n      allClicksHandler(keyCode, pressedKey, e);\n    }\n    pressedKey.classList.add('button_active');\n  } else {\n    // eslint-disable-next-line no-console\n    return console.log('There is no such key on the virtual keyboard');\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  const keyCode = e.code;\n  const pressedKey = getPressedKey(e, keyCode);\n\n  if (pressedKey) {\n    pressedKey.classList.remove('button_active');\n  }\n\n  if (keyCode === 'ShiftLeft' || keyCode === 'ShiftRight') {\n    isShift = false;\n    capsLockHandler();\n  }\n});\n\nfunction setLocalStorage() {\n  localStorage.setItem('language', lang);\n}\n\nwindow.addEventListener('beforeunload', setLocalStorage);\n\n// eslint-disable-next-line import/prefer-default-export\nexport { createPage };\n","import { createPage } from './script/components/Keyboard';\nimport './styles/style.scss';\n\nlet language;\n\nfunction getLocalStorage() {\n  if (localStorage.getItem('language') && localStorage.getItem('language') !== 'undefined') {\n    language = localStorage.getItem('language');\n  } else {\n    language = 'en';\n  }\n}\n\ngetLocalStorage();\n\nwindow.onload = function onload() {\n  // alert(\"Hi guys, I'm a little late so give me one more day please\");\n  createPage(language);\n};\n"],"names":["CreateKeyboard","constructor","rows","this","generateKeyboard","template","keyboard","document","createElement","id","Object","keys","forEach","row","elEng","classes","dataCode","elRus","join","innerHTML","CreateMessage","arrOfMessages","generateMessage","messageContainer","createDocumentFragment","element","message","className","append","str","replace","textContent","lang","isEng","pressedKeyForMouseEvent","isCaps","isShift","capsLockHandler","chars","charsEng","querySelectorAll","charsRus","el","toLowerCase","toUpperCase","languageHandler","event","isFirstTime","further","isRusInLocalStorage","altKey","ctrlKey","randomChar","querySelector","isRandomCharCaps","cache","dataset","getPressedKey","e","keyCode","selector","sliceOrAddTextAreaInnerHTML","index","isDel","symbolToAdd","isDeletion","i","decodeStr","length","slice","allClicksHandler","pressedKey","textarea","position","selectionStart","textareaLength","focus","repeat","classList","toggle","selectionEnd","sliceForDelete","sliceForBackspace","includeRus","contains","includeEng","trim","shiftSymbol","symbol","split","map","insertKeyToTextArea","createPage","language","body","container","setAttribute","createTextArea","addEventListener","target","tagName","code","console","log","preventDefault","add","remove","window","localStorage","setItem","getItem","onload"],"sourceRoot":""}