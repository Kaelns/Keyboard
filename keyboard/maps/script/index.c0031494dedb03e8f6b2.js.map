{"version":3,"file":"script/index.c0031494dedb03e8f6b2.js","mappings":"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","sources":["webpack:///./script/components/CreateKeyboard.js","webpack:///./script/components/Keyboard.js","webpack:///./index.js"],"sourcesContent":["export default class CreateKeyboard {\n  constructor(rows) {\n    this.rows = rows;\n  }\n\n  generateKeyboard() {\n    let template = '';\n    const keyboard = document.createElement('div');\n    keyboard.id = 'board';\n\n    Object.keys(this.rows).forEach((row) => {\n      template += '<div class=\"row\">';\n\n      this.rows[row].forEach(({\n        elEng, classes, dataCode, elRus,\n      }) => {\n        if (elEng !== 'arrows') {\n          template += `<button type=\"button\" class=\"${classes.join(\n            ' ',\n          )}\" data-code=\"${dataCode}\" ${elRus ? `data-cache=\"${elRus}\"` : ''}>${elEng} </button>`;\n        } else {\n          template += `<div class=\"arrows\">\n          <div class=\"row\">\n            <button type=\"button\" class=\"arrow arrow_up\" data-code=\"ArrowUp\"></button>\n          </div>\n          <div class=\"row\">\n          <button type=\"button\" class=\"arrow arrow_left\" data-code=\"ArrowLeft\"></button>\n          <button type=\"button\" class=\"arrow arrow_down\" data-code=\"ArrowDown\"></button>\n            <button type=\"button\" class=\"arrow arrow_right\" data-code=\"ArrowRight\"></button>\n          </div>\n        </div>`;\n        }\n      });\n\n      template += '</div>';\n    });\n\n    keyboard.innerHTML = template;\n    return keyboard;\n  }\n}\n","/* eslint-disable no-multi-assign */\nimport JSON from '../../assets/keyboard.json';\nimport CreateKeyboard from './CreateKeyboard';\n\nlet lang;\nlet isEng;\nlet isCaps = false;\n// eslint-disable-next-line prefer-const\nlet isShift = false;\n\nfunction createTextArea() {\n  const textarea = document.createElement('textarea');\n  textarea.id = 'editable';\n  textarea.className = 'textarea';\n  textarea.setAttribute(\n    'placeholder',\n    \"Hi guys, I'm a little late so give me one more day please\",\n  );\n  textarea.setAttribute('autofocus', 'autofocus');\n\n  return textarea;\n}\n\nfunction createPage(language) {\n  lang = language;\n  isEng = lang === 'en';\n\n  const body = document.querySelector('body');\n\n  const container = document.createElement('div');\n  container.className = 'container';\n\n  const textarea = createTextArea();\n  const keyboard = new CreateKeyboard(JSON).generateKeyboard();\n\n  container.append(textarea, keyboard);\n  body.append(container);\n\n  return lang;\n}\n\nfunction getPressedKey(e, keyCode) {\n  const selector = `[data-code=\"${keyCode}\"]`;\n\n  const pressedKey = document.querySelector(selector);\n\n  return pressedKey;\n}\n\nconst capsLockHandler = () => {\n  let chars;\n  const charsEng = document.querySelectorAll('.char');\n\n  if (lang === 'en') {\n    chars = charsEng;\n  } else {\n    const charsRus = document.querySelectorAll('.char-ru');\n    chars = [...charsEng, ...charsRus];\n  }\n\n  if (!isCaps) {\n    chars.forEach((el) => {\n      el.innerHTML = el.innerHTML.toUpperCase();\n    });\n    isCaps = true;\n  } else {\n    chars.forEach((el) => {\n      el.innerHTML = el.innerHTML.toLowerCase();\n    });\n    isCaps = false;\n  }\n};\n\nconst sliceTextAreaInnerHTML = (str, index, isDel) => {\n  let i = index - 1;\n  const length = str.length;\n  // We cannot pass negative indexes directly to the 2nd slicing operation.\n  if ((i < 0 && !isDel) || (i + 1 === length && isDel)) {\n    return null;\n  }\n\n  if (isDel) {\n    i++;\n  }\n\n  return str.slice(0, i) + str.slice(i + 1);\n};\n\nconst allClicksHandler = (keyCode, pressedKey, e) => {\n  const textarea = document.querySelector('textarea');\n  const position = textarea.selectionStart;\n  const textareaLength = textarea.innerHTML.length;\n\n  textarea.focus();\n\n  switch (keyCode) {\n    case 'CapsLock':\n      if (e.repeat) return;\n      pressedKey.classList.toggle('caps_active');\n      capsLockHandler();\n      break;\n    case 'Enter':\n      textarea.innerHTML += '\\n';\n      textarea.selectionStart = position + 1;\n      break;\n    case 'Space':\n      textarea.innerHTML += ' ';\n      textarea.selectionStart = position + 1;\n      break;\n    case 'Tab':\n      textarea.innerHTML += '    ';\n      textarea.selectionStart = position + 4;\n      break;\n    case 'ArrowLeft':\n      textarea.selectionStart = textarea.selectionEnd = position - 1 < 0 ? 0 : position - 1;\n      break;\n    case 'ArrowRight':\n      textarea.selectionStart = textarea.selectionEnd = position + 1 > textareaLength ? textareaLength : position + 1;\n      break;\n    case 'Delete':\n      const sliceForDelete = sliceTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, true);\n      if (sliceForDelete !== null) {\n        textarea.innerHTML = sliceForDelete;\n        textarea.selectionStart = position;\n      }\n      break;\n    case 'Backspace':\n      const sliceForBackspace = sliceTextAreaInnerHTML(textarea.innerHTML, textarea.selectionStart, false);\n      if (sliceForBackspace) {\n        textarea.innerHTML = sliceForBackspace;\n        textarea.selectionStart = position - 1;\n      }\n      break;\n    default:\n      const includeRus = !isEng ? pressedKey.classList.contains('char-ru') : false;\n      const includeEng = isEng ? pressedKey.classList.contains('char-ru') : false;\n\n      if (pressedKey.classList.contains('char') || includeRus) {\n        textarea.innerHTML += pressedKey.innerHTML.trim();\n      } else if (pressedKey.classList.contains('double') || includeEng) {\n        const [shiftSymbol, symbol] = pressedKey.innerHTML.split('<br>').map((el) => el.trim());\n        textarea.innerHTML += isShift ? shiftSymbol : symbol;\n      }\n      textarea.selectionStart = position + 1;\n  }\n};\n\ndocument.addEventListener('keydown', (e) => {\n  console.log(e);\n  const keyCode = e.code;\n  e.preventDefault();\n  const pressedKey = getPressedKey(e, keyCode);\n\n  if (pressedKey) {\n    pressedKey.classList.add('button_active');\n  }\n\n  allClicksHandler(keyCode, pressedKey, e);\n});\n\ndocument.addEventListener('keyup', (e) => {\n  const keyCode = e.code;\n  const pressedKey = getPressedKey(e, keyCode);\n\n  if (pressedKey) {\n    pressedKey.classList.remove('button_active');\n  }\n});\n\n// eslint-disable-next-line import/prefer-default-export\nexport { createPage };\n","import { createPage } from './script/components/Keyboard';\nimport './styles/style.scss';\n\nlet language;\n\nfunction getLocalStorage() {\n  if (localStorage.getItem('language')) {\n    language = localStorage.getItem('language');\n  } else {\n    language = 'en';\n  }\n}\n\ngetLocalStorage();\n\nwindow.onload = function onload() {\n  // alert(\"Hi guys, I'm a little late so give me one more day please\");\n  language = createPage(language);\n};\n\nfunction setLocalStorage() {\n  localStorage.setItem('language', language);\n}\n\nwindow.addEventListener('beforeunload', setLocalStorage);\n"],"names":["CreateKeyboard","constructor","rows","this","generateKeyboard","template","keyboard","document","createElement","id","Object","keys","forEach","row","elEng","classes","dataCode","elRus","join","innerHTML","lang","isEng","isCaps","createPage","language","body","querySelector","container","className","textarea","setAttribute","createTextArea","append","getPressedKey","e","keyCode","selector","sliceTextAreaInnerHTML","str","index","isDel","i","length","slice","allClicksHandler","pressedKey","position","selectionStart","textareaLength","focus","repeat","classList","toggle","chars","charsEng","querySelectorAll","charsRus","el","toLowerCase","toUpperCase","capsLockHandler","selectionEnd","sliceForDelete","sliceForBackspace","includeRus","contains","includeEng","trim","shiftSymbol","symbol","split","map","addEventListener","console","log","code","preventDefault","add","remove","localStorage","getItem","window","onload","setItem"],"sourceRoot":""}